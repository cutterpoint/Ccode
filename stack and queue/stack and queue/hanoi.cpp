/*
*功能：假设有3个塔座x y z，在x上插有n个直径大小各不相同、从小到大编号为1 - n的圆盘，要求将x轴上的n个圆盘移动到z轴并按同样顺序排列，移动圆盘须遵循以下规则：
 1）、每次只能移动一个圆盘；
 2）、圆盘可插在x y z中的任一塔座上；
 3）、任何时刻不能将一个较大的圆盘压在较小的圆盘上；
*文件：hanoi.cpp
*时间：2015年7月6日20:22:29
*作者：cutter_point
*/

#include <iostream>

using namespace std;

/*
这里写一个move函数
*/
void move(char a, int n, char b)
{
	//这个函数就表示吧n号圆盘从a移动到b
	cout << "我们把" << n << "号圆盘从" << a << "========>" << b << endl;
}

/*
这个函数是使用递归来调用汉诺塔，这个函数的功能是吧n个圆盘从x借助y移动到z
*/
void hanoi(int n, char x, char y, char z)
{
	//将塔坐X上按直径由小到大且自上而下编号为1至n的n个圆盘按规则搬到塔座z上，y可用作辅助塔座
	//搬动操作move(x, n, z)可定义为(c是初值为0的全局变量，对搬动计数):
	if (n == 1) //当n为1的时候，也就是递归到只剩下1个圆盘的时候了
	{//我们就需要把编号为1的圆盘从x移动到z就对了
		move(x, 1, z);
	}
	else
	{
		//如果x上所剩下的圆盘不止1，那么
		//首先我们把上面n-1个圆盘移动到y，吧z作为辅助底座
		hanoi(n - 1, x, z, y);
		//然后把最后那个最大的圆盘移动到z
		move(x, n, z);
		//最后再借助x吧y上的n-1个圆盘移动到z盘
		hanoi(n - 1, y, x, z);
	}
}
/*
int main()
{
	int n = 10;
	char x, y, z;
	x = 'A';
	y= 'B';
	z = 'C';

	hanoi(n, x, y, z);

	return 0;
}

*/
